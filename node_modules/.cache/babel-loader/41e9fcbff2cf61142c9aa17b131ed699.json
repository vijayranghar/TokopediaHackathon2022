{"ast":null,"code":"var _jsxFileName = \"/Users/tokopedia/Documents/TestingGround/hackathon/src/pages/ErrorGame/pages/MemoryGame/Components/LevelComplete.js\";\nimport React from 'react';\nimport { convertSecondsToTime, levels } from '../constants';\nimport { ACTION_TYPES } from '../reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LevelComplete(_ref) {\n  let {\n    dispatch,\n    currentLevel,\n    closeModal,\n    clicks,\n    time\n  } = _ref;\n\n  const handleLevels = playAgain => {\n    dispatch({\n      type: ACTION_TYPES.DO_OPERATION,\n      payload: {\n        currentLevel: playAgain ? currentLevel : currentLevel + 1,\n        clicks: 0,\n        isCurrentLevelCompleted: false,\n        time: -1,\n        currentLevelsTrack: 0,\n        restartGame: true\n      }\n    });\n    closeModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"levels\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Congratulation!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You Win\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Get \", levels[currentLevel + 1].bonus, \" more energy in next level\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Clicks : \", clicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", convertSecondsToTime(time)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-one btn1\",\n      onClick: () => handleLevels(true),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-one btn2\",\n      onClick: () => handleLevels(false),\n      children: \"Play Next Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LevelComplete;\nexport default LevelComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"LevelComplete\");","map":{"version":3,"sources":["/Users/tokopedia/Documents/TestingGround/hackathon/src/pages/ErrorGame/pages/MemoryGame/Components/LevelComplete.js"],"names":["React","convertSecondsToTime","levels","ACTION_TYPES","LevelComplete","dispatch","currentLevel","closeModal","clicks","time","handleLevels","playAgain","type","DO_OPERATION","payload","isCurrentLevelCompleted","currentLevelsTrack","restartGame","bonus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,oBAAT,EAA+BC,MAA/B,QAA6C,cAA7C;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,SAASC,aAAT,OAA6E;AAAA,MAAtD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA;AAA9C,GAAsD;;AAC3E,QAAMC,YAAY,GAAIC,SAAD,IAAe;AAClCN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAET,YAAY,CAACU,YADZ;AAEPC,MAAAA,OAAO,EAAE;AACPR,QAAAA,YAAY,EAAEK,SAAS,GAAGL,YAAH,GAAkBA,YAAY,GAAG,CADjD;AAEPE,QAAAA,MAAM,EAAE,CAFD;AAGPO,QAAAA,uBAAuB,EAAE,KAHlB;AAIPN,QAAAA,IAAI,EAAE,CAAC,CAJA;AAKPO,QAAAA,kBAAkB,EAAE,CALb;AAMPC,QAAAA,WAAW,EAAE;AANN;AAFF,KAAD,CAAR;AAWAV,IAAAA,UAAU;AACX,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAAQL,MAAM,CAACI,YAAY,GAAG,CAAhB,CAAN,CAAyBY,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,8BAAaV,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,2BAAUP,oBAAoB,CAACQ,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAA/D;AAAA,6BAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvE;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KA3BQN,a;AA6BT,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nimport { convertSecondsToTime, levels } from '../constants';\nimport { ACTION_TYPES } from '../reducer';\n\nfunction LevelComplete({ dispatch, currentLevel, closeModal, clicks, time }) {\n  const handleLevels = (playAgain) => {\n    dispatch({ \n      type: ACTION_TYPES.DO_OPERATION,\n      payload: {\n        currentLevel: playAgain ? currentLevel : currentLevel + 1,\n        clicks: 0,\n        isCurrentLevelCompleted: false,\n        time: -1,\n        currentLevelsTrack: 0,\n        restartGame: true,\n      }\n    });\n    closeModal();\n  }\n\n  return (\n    <div className='levels'>\n      <h1>Congratulation!!</h1>\n      <h2>You Win</h2>\n      <p>Get {levels[currentLevel + 1].bonus} more energy in next level</p>\n      <p>Clicks : {clicks}</p>\n      <p>Time: {convertSecondsToTime(time)}</p>\n      <button className=\"button-one btn1\" onClick={() => handleLevels(true)}><span>Play Again</span></button>\n      <button className=\"button-one btn2\" onClick={() => handleLevels(false)}>Play Next Level</button>\n    </div>\n  )\n}\n\nexport default LevelComplete\n"]},"metadata":{},"sourceType":"module"}